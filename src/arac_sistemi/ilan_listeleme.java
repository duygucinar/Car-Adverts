/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package arac_sistemi;

import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author uset
 */
public class ilan_listeleme extends javax.swing.JFrame {
   
    Object satirlar[]= new Object[11];
    static int sayac=0,sayac2=0;
    
    public ilan_listeleme() throws SQLException {
        this.setResizable(false);
        this.setLocation(450, 200);
        this.setTitle("İLAN LİSTELEME");
        this.setVisible(true);
        initComponents();
        myInitComponents();
    }
    
    public void myInitComponents() throws SQLException{
        baglanti bg = new baglanti();
        DefaultTableModel model = (DefaultTableModel)table.getModel();
        
        model.setRowCount(0);
        
        bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id order by ilan_id");
        ilanlar.setText("İlan ID Artan");
        while(bg.myRs.next()){
            satirlar[0]=bg.myRs.getString("ilan_id");
            satirlar[1]=bg.myRs.getString("ilan_adi");
            satirlar[2]=bg.myRs.getString("araba_marka");
            satirlar[3]=bg.myRs.getString("araba_model");
            satirlar[4]=bg.myRs.getString("vites_turu");
            satirlar[5]=bg.myRs.getString("yakit_turu");
            satirlar[6]=bg.myRs.getString("renk");
            satirlar[7]=bg.myRs.getString("ilan_km");
            satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
            satirlar[9]=bg.myRs.getString("ilan_fiyat");
            satirlar[9]= satirlar[9]+" TL";
            satirlar[10]=bg.myRs.getString("sehir");
            model.addRow(satirlar);
        }
        
        toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");
        
        bg.myRs = bg.myStat.executeQuery("select distinct araba_marka from araba");
        
        marka.addItem("Hepsi");
        while(bg.myRs.next()){
            marka.addItem(bg.myRs.getString("araba_marka"));
        }
        
        bg.myRs = bg.myStat.executeQuery("select vites_turu from vites");
        
        vites_turu.addItem("Hepsi");
        while(bg.myRs.next()){
            vites_turu.addItem(bg.myRs.getString("vites_turu"));
        }
              
        bg.myRs = bg.myStat.executeQuery("select yakit_turu from yakit");
        
        yakit_turu.addItem("Hepsi");
        while(bg.myRs.next()){
            yakit_turu.addItem(bg.myRs.getString("yakit_turu"));
        }

        bg.myRs = bg.myStat.executeQuery("select renk from renkler");
        
        renk.addItem("Hepsi");
        while(bg.myRs.next()){
            renk.addItem(bg.myRs.getString("renk"));
        }
        
        bg.myRs = bg.myStat.executeQuery("select sehir from sehirler");
        
        sehir.addItem("Hepsi");
        while(bg.myRs.next()){
            sehir.addItem(bg.myRs.getString("sehir"));
        }
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        bir_onceki = new javax.swing.JButton();
        cikis = new javax.swing.JButton();
        filtrele = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        marka = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        modelim = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        vites_turu = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        yakit_turu = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        renk = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        km_min = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        km_max = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        fiyat_min = new javax.swing.JTextField();
        fiyat_max = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        ara = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        tarih = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        sehir = new javax.swing.JComboBox<>();
        toplam = new javax.swing.JTextField();
        tumunu_listele = new javax.swing.JButton();
        ilanlar = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "İLAN ID", "İLAN ADI", "ARABA MARKA", "ARABA MODEL", "VİTES TÜRÜ", "YAKIT TÜRÜ", "RENK", "KM", "TARİH", "FİYAT", "ŞEHİR"
            }
        ));
        jScrollPane1.setViewportView(table);

        bir_onceki.setText("Bir Önceki Menü");
        bir_onceki.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bir_oncekiActionPerformed(evt);
            }
        });

        cikis.setText("Çıkış");
        cikis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cikisActionPerformed(evt);
            }
        });

        filtrele.setText("Filtrele");
        filtrele.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filtreleActionPerformed(evt);
            }
        });

        jLabel1.setText("Marka :");

        marka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                markaActionPerformed(evt);
            }
        });

        jLabel2.setText("Model :");

        jLabel3.setText("Vites Türü :");

        jLabel4.setText("Yakıt Türü :");

        jLabel5.setText("Renk :");

        jLabel6.setText("Km    :");

        jLabel7.setText("-");

        jLabel8.setText("Fiyat  :");

        jLabel9.setText("Ara  ");

        jLabel10.setText("-");

        jLabel11.setText("Tarih  :");

        tarih.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Belirsiz", "Son 24 Saat", "Son 1 Hafta", "Son 1 Ay" }));
        tarih.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tarihActionPerformed(evt);
            }
        });

        jLabel12.setText("Şehir :");

        sehir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sehirActionPerformed(evt);
            }
        });

        tumunu_listele.setText("Tümünü Listele");
        tumunu_listele.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tumunu_listeleActionPerformed(evt);
            }
        });

        jLabel13.setText("Listeleme Türü:");

        jLabel14.setText("İlan Adedi:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1015, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ilanlar)
                            .addComponent(toplam, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel9)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(ara, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel8)
                                            .addComponent(jLabel6))
                                        .addGap(31, 31, 31)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addComponent(km_min, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jLabel7)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(km_max, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addComponent(fiyat_min, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jLabel10)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(fiyat_max, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(1, 1, 1)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel12)
                                                    .addComponent(jLabel5)
                                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(jLabel2))
                                                    .addComponent(jLabel1))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(renk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(yakit_turu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(sehir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(tarih, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(vites_turu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(modelim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(marka, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addComponent(jLabel11)))))
                            .addContainerGap())
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addGap(56, 56, 56)
                            .addComponent(filtrele)
                            .addGap(74, 74, 74)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(tumunu_listele)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(cikis, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(bir_onceki)))
                        .addGap(43, 43, 43))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(marka, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(modelim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(vites_turu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(yakit_turu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(renk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(sehir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tarih, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addGap(21, 21, 21)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(km_min, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(km_max, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(fiyat_min, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(fiyat_max, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel9)
                        .addGap(12, 12, 12)
                        .addComponent(ara, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(filtrele)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tumunu_listele)
                        .addGap(18, 18, 18)
                        .addComponent(bir_onceki))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 490, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cikis)
                    .addComponent(toplam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ilanlar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bir_oncekiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bir_oncekiActionPerformed
        this.setVisible(false);
        veri_listeleme frame = new veri_listeleme();
    }//GEN-LAST:event_bir_oncekiActionPerformed

    private void cikisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cikisActionPerformed
        System.exit(0);
    }//GEN-LAST:event_cikisActionPerformed

    private void filtreleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filtreleActionPerformed
        baglanti bg = new baglanti();
        DefaultTableModel model = (DefaultTableModel)table.getModel();
        String kmMin=km_min.getText();
        String kmMax=km_max.getText();
        String f_min= fiyat_min.getText();
        String f_max=fiyat_max.getText();
        String arama = ara.getText();
        
        
        
        
        if(marka.getSelectedIndex()!=0 && modelim.getSelectedIndex()!=0 && vites_turu.getSelectedIndex()!=0 && yakit_turu.getSelectedIndex()!=0 && renk.getSelectedIndex()!=0 && sehir.getSelectedIndex()!=0 && kmMin!="-" && kmMax!="-" && f_min!="-" && f_max!=null && arama!="-" && tarih.getSelectedIndex()!=0){
            model.setRowCount(0);
            sayac++;
            
            SimpleDateFormat bicim =new SimpleDateFormat("yyyy.MM.dd HH:mm:ss");
            Date zaman = new Date();
            Calendar cal = Calendar.getInstance();
            
            
            if(sayac%6==1 && tarih.getSelectedIndex()==1){
                cal.add(Calendar.DATE, -1);
                ilanlar.setText("km Artan");
                try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and araba_marka='"+marka.getSelectedItem()+"' and araba_model='"+modelim.getSelectedItem()+"' and vites_turu='"+vites_turu.getSelectedItem()+"' and yakit_turu='"+yakit_turu.getSelectedItem()+"' and sehir ='"+sehir.getSelectedItem()+"' and ilan_fiyat between "+Float.parseFloat(f_min)+" and "+Float.parseFloat(f_max)+" and ilan_km between "+Integer.parseInt(kmMin)+" and "+Integer.parseInt(kmMax)+" and renk='"+renk.getSelectedItem()+"' and ilan_adi like '"+arama+"%' and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by ilan_km asc");

                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            else if(sayac%6==2 && tarih.getSelectedIndex()==1){
                cal.add(Calendar.DATE, -1);
                ilanlar.setText("km Azalan");
                try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and araba_marka='"+marka.getSelectedItem()+"' and araba_model='"+modelim.getSelectedItem()+"' and vites_turu='"+vites_turu.getSelectedItem()+"' and yakit_turu='"+yakit_turu.getSelectedItem()+"' and sehir ='"+sehir.getSelectedItem()+"' and ilan_fiyat between "+Float.parseFloat(f_min)+" and "+Float.parseFloat(f_max)+" and ilan_km between "+Integer.parseInt(kmMin)+" and "+Integer.parseInt(kmMax)+" and renk='"+renk.getSelectedItem()+"' and ilan_adi like '"+arama+"%' and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by ilan_km desc");

                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            else if(sayac%6==3 && tarih.getSelectedIndex()==1){
                cal.add(Calendar.DATE, -1);
                ilanlar.setText("Fiyat Artan");
                try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and araba_marka='"+marka.getSelectedItem()+"' and araba_model='"+modelim.getSelectedItem()+"' and vites_turu='"+vites_turu.getSelectedItem()+"' and yakit_turu='"+yakit_turu.getSelectedItem()+"' and sehir ='"+sehir.getSelectedItem()+"' and ilan_fiyat between "+Float.parseFloat(f_min)+" and "+Float.parseFloat(f_max)+" and ilan_km between "+Integer.parseInt(kmMin)+" and "+Integer.parseInt(kmMax)+" and renk='"+renk.getSelectedItem()+"' and ilan_adi like '"+arama+"%' and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by ilan_fiyat asc");

                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            else if(sayac%6==4 && tarih.getSelectedIndex()==1){
                cal.add(Calendar.DATE, -1);
                ilanlar.setText("Fiyat Azalan");
                try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and araba_marka='"+marka.getSelectedItem()+"' and araba_model='"+modelim.getSelectedItem()+"' and vites_turu='"+vites_turu.getSelectedItem()+"' and yakit_turu='"+yakit_turu.getSelectedItem()+"' and sehir ='"+sehir.getSelectedItem()+"' and ilan_fiyat between "+Float.parseFloat(f_min)+" and "+Float.parseFloat(f_max)+" and ilan_km between "+Integer.parseInt(kmMin)+" and "+Integer.parseInt(kmMax)+" and renk='"+renk.getSelectedItem()+"' and ilan_adi like '"+arama+"%' and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by ilan_fiyat desc");

                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            else if(sayac%6==5 && tarih.getSelectedIndex()==1){
                cal.add(Calendar.DATE, -1);
                ilanlar.setText("İlan Adı Artan");
                try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and araba_marka='"+marka.getSelectedItem()+"' and araba_model='"+modelim.getSelectedItem()+"' and vites_turu='"+vites_turu.getSelectedItem()+"' and yakit_turu='"+yakit_turu.getSelectedItem()+"' and sehir ='"+sehir.getSelectedItem()+"' and ilan_fiyat between "+Float.parseFloat(f_min)+" and "+Float.parseFloat(f_max)+" and ilan_km between "+Integer.parseInt(kmMin)+" and "+Integer.parseInt(kmMax)+" and renk='"+renk.getSelectedItem()+"' and ilan_adi like '"+arama+"%' and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by ilan_adi asc");

                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            else if(sayac%6==0 && tarih.getSelectedIndex()==1){
                cal.add(Calendar.DATE, -1);
                ilanlar.setText("İlan Adı Azalan");
                try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and araba_marka='"+marka.getSelectedItem()+"' and araba_model='"+modelim.getSelectedItem()+"' and vites_turu='"+vites_turu.getSelectedItem()+"' and yakit_turu='"+yakit_turu.getSelectedItem()+"' and sehir ='"+sehir.getSelectedItem()+"' and ilan_fiyat between "+Float.parseFloat(f_min)+" and "+Float.parseFloat(f_max)+" and ilan_km between "+Integer.parseInt(kmMin)+" and "+Integer.parseInt(kmMax)+" and renk='"+renk.getSelectedItem()+"' and ilan_adi like '"+arama+"%' and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by ilan_adi desc");

                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            else if(sayac%6==1 && tarih.getSelectedIndex()==2){
                cal.add(Calendar.DATE, -7);
                ilanlar.setText("km Artan");
                try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and araba_marka='"+marka.getSelectedItem()+"' and araba_model='"+modelim.getSelectedItem()+"' and vites_turu='"+vites_turu.getSelectedItem()+"' and yakit_turu='"+yakit_turu.getSelectedItem()+"' and sehir ='"+sehir.getSelectedItem()+"' and ilan_fiyat between "+Float.parseFloat(f_min)+" and "+Float.parseFloat(f_max)+" and ilan_km between "+Integer.parseInt(kmMin)+" and "+Integer.parseInt(kmMax)+" and renk='"+renk.getSelectedItem()+"' and ilan_adi like '"+arama+"%' and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by ilan_km asc");

                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            else if(sayac%6==2 && tarih.getSelectedIndex()==2){
                cal.add(Calendar.DATE, -7);
                ilanlar.setText("km Azalan");
                try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and araba_marka='"+marka.getSelectedItem()+"' and araba_model='"+modelim.getSelectedItem()+"' and vites_turu='"+vites_turu.getSelectedItem()+"' and yakit_turu='"+yakit_turu.getSelectedItem()+"' and sehir ='"+sehir.getSelectedItem()+"' and ilan_fiyat between "+Float.parseFloat(f_min)+" and "+Float.parseFloat(f_max)+" and ilan_km between "+Integer.parseInt(kmMin)+" and "+Integer.parseInt(kmMax)+" and renk='"+renk.getSelectedItem()+"' and ilan_adi like '"+arama+"%' and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by ilan_km desc");

                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            else if(sayac%6==3 && tarih.getSelectedIndex()==2){
                cal.add(Calendar.DATE, -7);
                ilanlar.setText("Fiyat Azalan");
                try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and araba_marka='"+marka.getSelectedItem()+"' and araba_model='"+modelim.getSelectedItem()+"' and vites_turu='"+vites_turu.getSelectedItem()+"' and yakit_turu='"+yakit_turu.getSelectedItem()+"' and sehir ='"+sehir.getSelectedItem()+"' and ilan_fiyat between "+Float.parseFloat(f_min)+" and "+Float.parseFloat(f_max)+" and ilan_km between "+Integer.parseInt(kmMin)+" and "+Integer.parseInt(kmMax)+" and renk='"+renk.getSelectedItem()+"' and ilan_adi like '"+arama+"%' and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by ilan_fiyat asc");

                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            else if(sayac%6==4 && tarih.getSelectedIndex()==2){
                cal.add(Calendar.DATE, -7);
                ilanlar.setText("Fiyat Artan");
                try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and araba_marka='"+marka.getSelectedItem()+"' and araba_model='"+modelim.getSelectedItem()+"' and vites_turu='"+vites_turu.getSelectedItem()+"' and yakit_turu='"+yakit_turu.getSelectedItem()+"' and sehir ='"+sehir.getSelectedItem()+"' and ilan_fiyat between "+Float.parseFloat(f_min)+" and "+Float.parseFloat(f_max)+" and ilan_km between "+Integer.parseInt(kmMin)+" and "+Integer.parseInt(kmMax)+" and renk='"+renk.getSelectedItem()+"' and ilan_adi like '"+arama+"%' and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by ilan_fiyat desc");

                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            else if(sayac%6==5 && tarih.getSelectedIndex()==2){
                cal.add(Calendar.DATE, -7);
                ilanlar.setText("İlan Adı Azalan");
                try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and araba_marka='"+marka.getSelectedItem()+"' and araba_model='"+modelim.getSelectedItem()+"' and vites_turu='"+vites_turu.getSelectedItem()+"' and yakit_turu='"+yakit_turu.getSelectedItem()+"' and sehir ='"+sehir.getSelectedItem()+"' and ilan_fiyat between "+Float.parseFloat(f_min)+" and "+Float.parseFloat(f_max)+" and ilan_km between "+Integer.parseInt(kmMin)+" and "+Integer.parseInt(kmMax)+" and renk='"+renk.getSelectedItem()+"' and ilan_adi like '"+arama+"%' and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by ilan_adi asc");

                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            else if(sayac%6==0 && tarih.getSelectedIndex()==2){
                cal.add(Calendar.DATE, -7);
                ilanlar.setText("İlan Adı Artan");
                try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and araba_marka='"+marka.getSelectedItem()+"' and araba_model='"+modelim.getSelectedItem()+"' and vites_turu='"+vites_turu.getSelectedItem()+"' and yakit_turu='"+yakit_turu.getSelectedItem()+"' and sehir ='"+sehir.getSelectedItem()+"' and ilan_fiyat between "+Float.parseFloat(f_min)+" and "+Float.parseFloat(f_max)+" and ilan_km between "+Integer.parseInt(kmMin)+" and "+Integer.parseInt(kmMax)+" and renk='"+renk.getSelectedItem()+"' and ilan_adi like '"+arama+"%' and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by ilan_adi desc");

                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            if(sayac%6==1 && tarih.getSelectedIndex()==3){
                cal.add(Calendar.DATE, -30);
                ilanlar.setText("km Artan");
                try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and araba_marka='"+marka.getSelectedItem()+"' and araba_model='"+modelim.getSelectedItem()+"' and vites_turu='"+vites_turu.getSelectedItem()+"' and yakit_turu='"+yakit_turu.getSelectedItem()+"' and sehir ='"+sehir.getSelectedItem()+"' and ilan_fiyat between "+Float.parseFloat(f_min)+" and "+Float.parseFloat(f_max)+" and ilan_km between "+Integer.parseInt(kmMin)+" and "+Integer.parseInt(kmMax)+" and renk='"+renk.getSelectedItem()+"' and ilan_adi like '"+arama+"%' and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by ilan_km asc");

                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            else if(sayac%6==2 && tarih.getSelectedIndex()==3){
                cal.add(Calendar.DATE, -30);
                ilanlar.setText("km Azalan");
                try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and araba_marka='"+marka.getSelectedItem()+"' and araba_model='"+modelim.getSelectedItem()+"' and vites_turu='"+vites_turu.getSelectedItem()+"' and yakit_turu='"+yakit_turu.getSelectedItem()+"' and sehir ='"+sehir.getSelectedItem()+"' and ilan_fiyat between "+Float.parseFloat(f_min)+" and "+Float.parseFloat(f_max)+" and ilan_km between "+Integer.parseInt(kmMin)+" and "+Integer.parseInt(kmMax)+" and renk='"+renk.getSelectedItem()+"' and ilan_adi like '"+arama+"%' and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by ilan_km desc");

                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            else if(sayac%6==3 && tarih.getSelectedIndex()==3){
                cal.add(Calendar.DATE, -30);
                ilanlar.setText("Fiyat Artan");
                try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and araba_marka='"+marka.getSelectedItem()+"' and araba_model='"+modelim.getSelectedItem()+"' and vites_turu='"+vites_turu.getSelectedItem()+"' and yakit_turu='"+yakit_turu.getSelectedItem()+"' and sehir ='"+sehir.getSelectedItem()+"' and ilan_fiyat between "+Float.parseFloat(f_min)+" and "+Float.parseFloat(f_max)+" and ilan_km between "+Integer.parseInt(kmMin)+" and "+Integer.parseInt(kmMax)+" and renk='"+renk.getSelectedItem()+"' and ilan_adi like '"+arama+"%' and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by ilan_fiyat asc");

                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            else if(sayac%6==4 && tarih.getSelectedIndex()==3){
                cal.add(Calendar.DATE, -30);
                ilanlar.setText("Fiyat Azalan");
                try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and araba_marka='"+marka.getSelectedItem()+"' and araba_model='"+modelim.getSelectedItem()+"' and vites_turu='"+vites_turu.getSelectedItem()+"' and yakit_turu='"+yakit_turu.getSelectedItem()+"' and sehir ='"+sehir.getSelectedItem()+"' and ilan_fiyat between "+Float.parseFloat(f_min)+" and "+Float.parseFloat(f_max)+" and ilan_km between "+Integer.parseInt(kmMin)+" and "+Integer.parseInt(kmMax)+" and renk='"+renk.getSelectedItem()+"' and ilan_adi like '"+arama+"%' and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by ilan_fiyat desc");

                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            else if(sayac%6==5 && tarih.getSelectedIndex()==3){
                cal.add(Calendar.DATE, -30);
                ilanlar.setText("İlan Adı Artan");
                try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and araba_marka='"+marka.getSelectedItem()+"' and araba_model='"+modelim.getSelectedItem()+"' and vites_turu='"+vites_turu.getSelectedItem()+"' and yakit_turu='"+yakit_turu.getSelectedItem()+"' and sehir ='"+sehir.getSelectedItem()+"' and ilan_fiyat between "+Float.parseFloat(f_min)+" and "+Float.parseFloat(f_max)+" and ilan_km between "+Integer.parseInt(kmMin)+" and "+Integer.parseInt(kmMax)+" and renk='"+renk.getSelectedItem()+"' and ilan_adi like '"+arama+"%' and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by ilan_adi asc");

                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            else if(sayac%6==0 && tarih.getSelectedIndex()==3){
                cal.add(Calendar.DATE, -30);
                ilanlar.setText("İlan Adı Azalan");
                try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and araba_marka='"+marka.getSelectedItem()+"' and araba_model='"+modelim.getSelectedItem()+"' and vites_turu='"+vites_turu.getSelectedItem()+"' and yakit_turu='"+yakit_turu.getSelectedItem()+"' and sehir ='"+sehir.getSelectedItem()+"' and ilan_fiyat between "+Float.parseFloat(f_min)+" and "+Float.parseFloat(f_max)+" and ilan_km between "+Integer.parseInt(kmMin)+" and "+Integer.parseInt(kmMax)+" and renk='"+renk.getSelectedItem()+"' and ilan_adi like '"+arama+"%' and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by ilan_adi desc");

                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
                
        }
        
        else if(modelim.getSelectedIndex()!=0){
            model.setRowCount(0);
            sayac++;
            if(sayac%16==1){
                try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and araba_marka='"+marka.getSelectedItem()+"'"+" and araba_model='"+modelim.getSelectedItem()+"' order by vites_turu asc");
                    ilanlar.setText("Vites Türü Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");
                
                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            else if(sayac%16==2){
                try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and araba_marka='"+marka.getSelectedItem()+"'"+" and araba_model='"+modelim.getSelectedItem()+"' order by vites_turu desc");
                    ilanlar.setText("Vites Türü Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");
                
                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            else if(sayac%16==3){
                try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and araba_marka='"+marka.getSelectedItem()+"'"+" and araba_model='"+modelim.getSelectedItem()+"' order by yakit_turu asc");
                    ilanlar.setText("Yakıt Türü Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");
                
                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            else if(sayac%16==4){
                try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and araba_marka='"+marka.getSelectedItem()+"'"+" and araba_model='"+modelim.getSelectedItem()+"' order by yakit_turu desc");
                    ilanlar.setText("Yakıt Türü Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");
                
                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            else if(sayac%16==5){
                try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and araba_marka='"+marka.getSelectedItem()+"'"+" and araba_model='"+modelim.getSelectedItem()+"' order by renk asc");
                    ilanlar.setText("Renk Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");
                
                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            else if(sayac%16==6){
                try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and araba_marka='"+marka.getSelectedItem()+"'"+" and araba_model='"+modelim.getSelectedItem()+"' order by renk desc");
                    ilanlar.setText("Renk Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");
                
                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            else if(sayac%16==7){
                try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and araba_marka='"+marka.getSelectedItem()+"'"+" and araba_model='"+modelim.getSelectedItem()+"' order by sehir asc");
                    ilanlar.setText("Şehir Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");
                
                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            else if(sayac%16==8){
                try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and araba_marka='"+marka.getSelectedItem()+"'"+" and araba_model='"+modelim.getSelectedItem()+"' order by sehir desc");
                    ilanlar.setText("Şehir Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");
                
                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            else if(sayac%16==9){
                try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and araba_marka='"+marka.getSelectedItem()+"'"+" and araba_model='"+modelim.getSelectedItem()+"' order by ilan_tarih asc");
                    ilanlar.setText("Tarih Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");
                
                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            else if(sayac%16==10){
                try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and araba_marka='"+marka.getSelectedItem()+"'"+" and araba_model='"+modelim.getSelectedItem()+"' order by ilan_tarih desc");
                    ilanlar.setText("Tarih Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");
                
                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            else if(sayac%16==11){
                try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and araba_marka='"+marka.getSelectedItem()+"'"+" and araba_model='"+modelim.getSelectedItem()+"' order by ilan_km asc");
                    ilanlar.setText("km Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");
                
                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            else if(sayac%16==12){
                try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and araba_marka='"+marka.getSelectedItem()+"'"+" and araba_model='"+modelim.getSelectedItem()+"' order by ilan_km desc");
                    ilanlar.setText("km Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");
                
                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            else if(sayac%16==13){
                try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and araba_marka='"+marka.getSelectedItem()+"'"+" and araba_model='"+modelim.getSelectedItem()+"' order by ilan_fiyat asc");
                    ilanlar.setText("Fiyat Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");
                
                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            else if(sayac%16==14){
                try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and araba_marka='"+marka.getSelectedItem()+"'"+" and araba_model='"+modelim.getSelectedItem()+"' order by ilan_fiyat desc");
                    ilanlar.setText("Fiyat Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");
                
                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            else if(sayac%16==15){
                try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and araba_marka='"+marka.getSelectedItem()+"'"+" and araba_model='"+modelim.getSelectedItem()+"' order by ilan_adi asc");
                    ilanlar.setText("İlan Adı Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");
                
                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            else if(sayac%16==0){
                try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and araba_marka='"+marka.getSelectedItem()+"'"+" and araba_model='"+modelim.getSelectedItem()+"' order by ilan_adi desc");
                    ilanlar.setText("İlan Adı Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");
                
                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
        }

        else if(marka.getSelectedIndex()!=0){
            model.setRowCount(0);
            sayac++;
            
            if(sayac%18==1){
                try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and araba_marka='"+marka.getSelectedItem()+"' order by araba_model asc");
                    ilanlar.setText("Model Adı Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else if(sayac%18==2){
                try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and araba_marka='"+marka.getSelectedItem()+"' order by araba_model desc");
                    ilanlar.setText("Model Adı Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else if(sayac%18==3){
                try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and araba_marka='"+marka.getSelectedItem()+"' order by vites_turu asc");
                    ilanlar.setText("Vites Türü Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            else if(sayac%18==4){
                try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and araba_marka='"+marka.getSelectedItem()+"' order by vites_turu desc");
                    ilanlar.setText("Vites Türü Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            else if(sayac%18==5){
                try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and araba_marka='"+marka.getSelectedItem()+"' order by yakit_turu asc");
                    ilanlar.setText("Yakıt Türü Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            else if(sayac%18==6){
                try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and araba_marka='"+marka.getSelectedItem()+"' order by yakit_turu desc");
                    ilanlar.setText("Yakıt Türü Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            else if(sayac%18==7){
                try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and araba_marka='"+marka.getSelectedItem()+"' order by renk asc");
                    ilanlar.setText("Renk Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            else if(sayac%18==8){
                try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and araba_marka='"+marka.getSelectedItem()+"' order by renk desc");
                    ilanlar.setText("Renk Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            else if(sayac%18==9){
                try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and araba_marka='"+marka.getSelectedItem()+"' order by sehir asc");
                    ilanlar.setText("Şehir Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            else if(sayac%18==10){
                try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and araba_marka='"+marka.getSelectedItem()+"' order by sehir desc");
                    ilanlar.setText("Şehir Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            else if(sayac%18==11){
                try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and araba_marka='"+marka.getSelectedItem()+"' order by ilan_tarih asc");
                    ilanlar.setText("Tarih Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            else if(sayac%18==12){
                try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and araba_marka='"+marka.getSelectedItem()+"' order by ilan_tarih desc");
                    ilanlar.setText("Tarih Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            else if(sayac%18==13){
                try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and araba_marka='"+marka.getSelectedItem()+"' order by ilan_km asc");
                    ilanlar.setText("km Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            else if(sayac%18==14){
                try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and araba_marka='"+marka.getSelectedItem()+"' order by ilan_km desc");
                    ilanlar.setText("km Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            else if(sayac%18==15){
                try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and araba_marka='"+marka.getSelectedItem()+"' order by ilan_fiyat asc");
                    ilanlar.setText("Fiyat Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            else if(sayac%18==16){
                try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and araba_marka='"+marka.getSelectedItem()+"' order by ilan_fiyat desc");
                    ilanlar.setText("Fiyat Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            else if(sayac%18==17){
                try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and araba_marka='"+marka.getSelectedItem()+"' order by ilan_adi asc");
                    ilanlar.setText("İlan Adı Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            else if(sayac%18==0){
                try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and araba_marka='"+marka.getSelectedItem()+"' order by ilan_adi desc");
                    ilanlar.setText("İlan Adı Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        
        else if(vites_turu.getSelectedIndex()!=0){
           model.setRowCount(0);
           sayac++;
           if(sayac%18==1){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and vites_turu='"+vites_turu.getSelectedItem()+"' order by araba_marka");
                    ilanlar.setText("Marka Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
           }
           
           else if(sayac%18==2){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and vites_turu='"+vites_turu.getSelectedItem()+"' order by araba_marka desc");
                    ilanlar.setText("Marka Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
           else if(sayac%18==3){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and vites_turu='"+vites_turu.getSelectedItem()+"' order by araba_model");
                    ilanlar.setText("Model Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
           else if(sayac%18==4){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and vites_turu='"+vites_turu.getSelectedItem()+"' order by araba_model desc");
                    ilanlar.setText("Model Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==5){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and vites_turu='"+vites_turu.getSelectedItem()+"' order by yakit_turu");
                    ilanlar.setText("Yakıt Türü Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==6){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and vites_turu='"+vites_turu.getSelectedItem()+"' order by yakit_turu desc");
                    ilanlar.setText("Yakıt Türü Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==7){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and vites_turu='"+vites_turu.getSelectedItem()+"' order by renk");
                    ilanlar.setText("Renk Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==8){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and vites_turu='"+vites_turu.getSelectedItem()+"' order by renk desc");
                    ilanlar.setText("Renk Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==9){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and vites_turu='"+vites_turu.getSelectedItem()+"' order by sehir");
                    ilanlar.setText("Şehir Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==10){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and vites_turu='"+vites_turu.getSelectedItem()+"' order by sehir desc");
                    ilanlar.setText("Şehir Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==11){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and vites_turu='"+vites_turu.getSelectedItem()+"' order by ilan_tarih");
                    ilanlar.setText("Tarih Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==12){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and vites_turu='"+vites_turu.getSelectedItem()+"' order by ilan_tarih desc");
                    ilanlar.setText("Tarih Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==13){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and vites_turu='"+vites_turu.getSelectedItem()+"' order by ilan_km");
                    ilanlar.setText("km Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==14){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and vites_turu='"+vites_turu.getSelectedItem()+"' order by ilan_km desc");
                    ilanlar.setText("km Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            else if(sayac%18==15){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and vites_turu='"+vites_turu.getSelectedItem()+"' order by ilan_fiyat");
                    ilanlar.setText("Fiyat Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==16){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and vites_turu='"+vites_turu.getSelectedItem()+"' order by ilan_fiyat desc");
                    ilanlar.setText("Fiyat Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==17){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and vites_turu='"+vites_turu.getSelectedItem()+"' order by ilan_adi");
                    ilanlar.setText("İlan Adı Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            else{
                try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and vites_turu='"+vites_turu.getSelectedItem()+"' order by ilan_adi desc");
                    ilanlar.setText("İlan Adı Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        
        else if(yakit_turu.getSelectedIndex()!=0){
            model.setRowCount(0);
           sayac++;
           if(sayac%18==1){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and yakit_turu='"+yakit_turu.getSelectedItem()+"' order by araba_marka");
                    ilanlar.setText("Marka Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
           }
           
           else if(sayac%18==2){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and yakit_turu='"+yakit_turu.getSelectedItem()+"' order by araba_marka desc");
                    ilanlar.setText("Marka Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
           else if(sayac%18==3){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and yakit_turu='"+yakit_turu.getSelectedItem()+"' order by araba_model");
                    ilanlar.setText("Model Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
           else if(sayac%18==4){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and yakit_turu='"+yakit_turu.getSelectedItem()+"' order by araba_model desc");
                    ilanlar.setText("Model Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==5){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and yakit_turu='"+yakit_turu.getSelectedItem()+"' order by vites_turu");
                    ilanlar.setText("Vites Türü Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==6){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and yakit_turu='"+yakit_turu.getSelectedItem()+"' order by vites_turu desc");
                    ilanlar.setText("Vites Türü Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==7){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and yakit_turu='"+yakit_turu.getSelectedItem()+"' order by renk");
                    ilanlar.setText("Renk Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==8){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and yakit_turu='"+yakit_turu.getSelectedItem()+"' order by renk desc");
                    ilanlar.setText("Renk Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==9){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and yakit_turu='"+yakit_turu.getSelectedItem()+"' order by sehir");
                    ilanlar.setText("Şehir Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==10){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and yakit_turu='"+yakit_turu.getSelectedItem()+"' order by sehir desc");
                    ilanlar.setText("Şehir Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==11){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and yakit_turu='"+yakit_turu.getSelectedItem()+"' order by ilan_tarih");
                    ilanlar.setText("Tarih Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==12){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and yakit_turu='"+yakit_turu.getSelectedItem()+"' order by ilan_tarih desc");
                    ilanlar.setText("Tarih Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==13){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and yakit_turu='"+yakit_turu.getSelectedItem()+"' order by ilan_km");
                    ilanlar.setText("km Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==14){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and yakit_turu='"+yakit_turu.getSelectedItem()+"' order by ilan_km desc");
                    ilanlar.setText("km Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            else if(sayac%18==15){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and yakit_turu='"+yakit_turu.getSelectedItem()+"' order by ilan_fiyat");
                    ilanlar.setText("Fiyat Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==16){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and yakit_turu='"+yakit_turu.getSelectedItem()+"' order by ilan_fiyat desc");
                    ilanlar.setText("Fiyat Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==17){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and yakit_turu='"+yakit_turu.getSelectedItem()+"' order by ilan_adi");
                    ilanlar.setText("İlan Adı Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            else{
                try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and yakit_turu='"+yakit_turu.getSelectedItem()+"' order by ilan_adi desc");
                    ilanlar.setText("İlan Adı Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        
        else if(renk.getSelectedIndex()!=0){
            model.setRowCount(0);
           sayac++;
           if(sayac%18==1){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and renk='"+renk.getSelectedItem()+"' order by araba_marka");
                    ilanlar.setText("Marka Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
           }
           
           else if(sayac%18==2){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and renk='"+renk.getSelectedItem()+"' order by araba_marka desc");
                    ilanlar.setText("Marka Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
           else if(sayac%18==3){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and renk='"+renk.getSelectedItem()+"' order by araba_model");
                    ilanlar.setText("Model Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
           else if(sayac%18==4){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and renk='"+renk.getSelectedItem()+"' order by araba_model desc");
                    ilanlar.setText("Model Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==5){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and renk='"+renk.getSelectedItem()+"' order by vites_turu");
                    ilanlar.setText("Vites Türü Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==6){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and renk='"+renk.getSelectedItem()+"' order by vites_turu desc");
                    ilanlar.setText("Vites Türü Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==7){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and renk='"+renk.getSelectedItem()+"' order by yakit_turu");
                    ilanlar.setText("Yakıt Türü Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==8){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and renk='"+renk.getSelectedItem()+"' order by yakit_turu desc");
                    ilanlar.setText("Yakıt Türü Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==9){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and renk='"+renk.getSelectedItem()+"' order by sehir");
                    ilanlar.setText("Şehir Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==10){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and renk='"+renk.getSelectedItem()+"' order by sehir desc");
                    ilanlar.setText("Şehir Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==11){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and renk='"+renk.getSelectedItem()+"' order by ilan_tarih");
                    ilanlar.setText("Tarih Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==12){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and renk='"+renk.getSelectedItem()+"' order by ilan_tarih desc");
                    ilanlar.setText("Tarih Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==13){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and renk='"+renk.getSelectedItem()+"' order by ilan_km");
                    ilanlar.setText("km Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==14){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and renk='"+renk.getSelectedItem()+"' order by ilan_km desc");
                    ilanlar.setText("km Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            else if(sayac%18==15){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and renk='"+renk.getSelectedItem()+"' order by ilan_fiyat");
                    ilanlar.setText("Fiyat Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==16){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and renk='"+renk.getSelectedItem()+"' order by ilan_fiyat desc");
                    ilanlar.setText("Fiyat Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==17){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and renk='"+renk.getSelectedItem()+"' order by ilan_adi");
                    ilanlar.setText("İlan Adı Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            else{
                try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and renk='"+renk.getSelectedItem()+"' order by ilan_adi desc");
                    ilanlar.setText("İlan Adı Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        
        else if(sehir.getSelectedIndex()!=0){
            model.setRowCount(0);
            sayac++;
           if(sayac%18==1){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and sehir='"+sehir.getSelectedItem()+"' order by araba_marka");
                    ilanlar.setText("Marka Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
           }
           
           else if(sayac%18==2){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and sehir='"+sehir.getSelectedItem()+"' order by araba_marka desc");
                    ilanlar.setText("Marka Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
           else if(sayac%18==3){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and sehir='"+sehir.getSelectedItem()+"' order by araba_model");
                    ilanlar.setText("Model Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
           else if(sayac%18==4){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and sehir='"+sehir.getSelectedItem()+"' order by araba_model desc");
                    ilanlar.setText("Model Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==5){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and sehir='"+sehir.getSelectedItem()+"' order by vites_turu");
                    ilanlar.setText("Vites Türü Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==6){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and sehir='"+sehir.getSelectedItem()+"' order by vites_turu desc");
                    ilanlar.setText("Vites Türü Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==7){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and sehir='"+sehir.getSelectedItem()+"' order by yakit_turu");
                    ilanlar.setText("Yakıt Türü Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==8){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and sehir='"+sehir.getSelectedItem()+"' order by yakit_turu desc");
                    ilanlar.setText("Yakıt Türü Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==9){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and sehir='"+sehir.getSelectedItem()+"' order by renk");
                    ilanlar.setText("Şehir Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==10){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and sehir='"+sehir.getSelectedItem()+"' order by renk desc");
                    ilanlar.setText("Şehir Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==11){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and sehir='"+sehir.getSelectedItem()+"' order by ilan_tarih");
                    ilanlar.setText("Tarih Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==12){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and sehir='"+sehir.getSelectedItem()+"' order by ilan_tarih desc");
                    ilanlar.setText("Tarih Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==13){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and sehir='"+sehir.getSelectedItem()+"' order by ilan_km");
                    ilanlar.setText("km Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==14){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and sehir='"+sehir.getSelectedItem()+"' order by ilan_km desc");
                    ilanlar.setText("km Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            else if(sayac%18==15){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and sehir='"+sehir.getSelectedItem()+"' order by ilan_fiyat");
                    ilanlar.setText("Fiyat Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==16){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and sehir='"+sehir.getSelectedItem()+"' order by ilan_fiyat desc");
                    ilanlar.setText("Fiyat Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==17){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and sehir='"+sehir.getSelectedItem()+"' order by ilan_adi");
                    ilanlar.setText("İlan Adı Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            else{
                try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and sehir='"+sehir.getSelectedItem()+"' order by ilan_adi desc");
                    ilanlar.setText("İlan Adı Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
        }
        
        else if(tarih.getSelectedIndex()==1){
            model.setRowCount(0);
            
            SimpleDateFormat bicim =new SimpleDateFormat("yyyy.MM.dd HH:mm:ss");
            Date zaman = new Date();
            Calendar cal = Calendar.getInstance();
            cal.add(Calendar.DATE, -1);
            
            sayac2++;
           if(sayac2%18==1){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by araba_marka");
                    ilanlar.setText("Marka Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
           }
           
           else if(sayac%18==2){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by araba_marka desc");
                    ilanlar.setText("Marka Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
           else if(sayac%18==3){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by araba_model");
                    ilanlar.setText("Model Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
           else if(sayac%18==4){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by araba_model desc");
                    ilanlar.setText("Model Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==5){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by vites_turu");
                    ilanlar.setText("Vites Türü Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==6){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by vites_turu desc");
                    ilanlar.setText("Vites Türü Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==7){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by yakit_turu");
                    ilanlar.setText("Yakıt Türü Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==8){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by yakit_turu desc");
                    ilanlar.setText("Yakıt Türü Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==9){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by renk");
                    ilanlar.setText("Renk Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==10){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by renk desc");
                    ilanlar.setText("Renk Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==11){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by sehir");
                    ilanlar.setText("Şehir Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==12){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by sehir desc");
                    ilanlar.setText("Şehir Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==13){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by ilan_km");
                    ilanlar.setText("km Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==14){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by ilan_km desc");
                    ilanlar.setText("km Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            else if(sayac%18==15){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by ilan_fiyat");
                    ilanlar.setText("Fiyat Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==16){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by ilan_fiyat desc");
                    ilanlar.setText("Fiyat Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==17){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by ilan_adi");
                    ilanlar.setText("İlan Adı Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            else{
                try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by ilan_adi desc");
                    ilanlar.setText("İlan Adı Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
           
        }
        
        else if(tarih.getSelectedIndex()==2){
            model.setRowCount(0);
            SimpleDateFormat bicim =new SimpleDateFormat("yyyy.MM.dd HH:mm:ss");
            Date zaman = new Date();
            Calendar cal = Calendar.getInstance();
            cal.add(Calendar.DATE, -7);
           
            sayac++;
            if(sayac%18==1){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by araba_marka");
                    ilanlar.setText("Marka Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
           }
           
           else if(sayac%18==2){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by araba_marka desc");
                    ilanlar.setText("Marka Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
           else if(sayac%18==3){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by araba_model");
                    ilanlar.setText("Model Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
           else if(sayac%18==4){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by araba_model desc");
                    ilanlar.setText("Model Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==5){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by vites_turu");
                    ilanlar.setText("Vites Türü Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==6){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by vites_turu desc");
                    ilanlar.setText("Vites Türü Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==7){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by yakit_turu");
                    ilanlar.setText("Yakıt Türü Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==8){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by yakit_turu desc");
                    ilanlar.setText("Yakıt Türü Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==9){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by renk");
                    ilanlar.setText("Renk Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==10){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by renk desc");
                    ilanlar.setText("Renk Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==11){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by sehir");
                    ilanlar.setText("Şehir Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==12){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by sehir desc");
                    ilanlar.setText("Şehir Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==13){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by ilan_km");
                    ilanlar.setText("km Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==14){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by ilan_km desc");
                    ilanlar.setText("km Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            else if(sayac%18==15){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by ilan_fiyat");
                    ilanlar.setText("Fiyat Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==16){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by ilan_fiyat desc");
                    ilanlar.setText("Fiyat Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==17){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by ilan_adi");
                    ilanlar.setText("İlan Adı Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            else{
                try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by ilan_adi desc");
                    ilanlar.setText("İlan Adı Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        
        else if(tarih.getSelectedIndex()==3){
            model.setRowCount(0);
            SimpleDateFormat bicim =new SimpleDateFormat("yyyy.MM.dd HH:mm:ss");
            Date zaman = new Date();
            Calendar cal = Calendar.getInstance();
            cal.add(Calendar.DATE, -30);
            
            sayac++;
            if(sayac%18==1){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by araba_marka");
                    ilanlar.setText("Marka Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
           }
           
           else if(sayac%18==2){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by araba_marka desc");
                    ilanlar.setText("Marka Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
           else if(sayac%18==3){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by araba_model");
                    ilanlar.setText("Model Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
           else if(sayac%18==4){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by araba_model desc");
                    ilanlar.setText("Model Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==5){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by vites_turu");
                    ilanlar.setText("Vites Türü Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==6){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by vites_turu desc");
                    ilanlar.setText("Vites Türü Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==7){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by yakit_turu");
                    ilanlar.setText("Yakıt Türü Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==8){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by yakit_turu desc");
                    ilanlar.setText("Yakıt Türü Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==9){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by renk");
                    ilanlar.setText("Renk Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==10){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by renk desc");
                    ilanlar.setText("Renk Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==11){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by sehir");
                    ilanlar.setText("Şehir Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==12){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by sehir desc");
                    ilanlar.setText("Şehir Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==13){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by ilan_km");
                    ilanlar.setText("km Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==14){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by ilan_km desc");
                    ilanlar.setText("km Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            else if(sayac%18==15){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by ilan_fiyat");
                    ilanlar.setText("Fiyat Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==16){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by ilan_fiyat desc");
                    ilanlar.setText("Fiyat Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
           
            else if(sayac%18==17){
               try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by ilan_adi");
                    ilanlar.setText("İlan Adı Artan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            else{
                try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and ilan_tarih between '"+bicim.format(cal.getTime())+"' and '"+(bicim.format(zaman))+"' order by ilan_adi desc");
                    ilanlar.setText("İlan Adı Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        
        else if(!"-".equals(kmMin) && !"-".equals(kmMax)){
            model.setRowCount(0);
            sayac++;
            ilanlar.setText("km Artan");
            if(sayac%2==0){
                
                try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and ilan_km between "+Integer.parseInt(kmMin)+" and "+Integer.parseInt(kmMax)+" order by ilan_km");
                    
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else{
                try {
                    bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and ilan_km between "+Integer.parseInt(kmMin)+" and "+Integer.parseInt(kmMax)+" order by ilan_km desc");
                    ilanlar.setText("km Azalan");
                    while(bg.myRs.next()){
                        satirlar[0]=bg.myRs.getString("ilan_id");
                        satirlar[1]=bg.myRs.getString("ilan_adi");
                        satirlar[2]=bg.myRs.getString("araba_marka");
                        satirlar[3]=bg.myRs.getString("araba_model");
                        satirlar[4]=bg.myRs.getString("vites_turu");
                        satirlar[5]=bg.myRs.getString("yakit_turu");
                        satirlar[6]=bg.myRs.getString("renk");
                        satirlar[7]=bg.myRs.getString("ilan_km");
                        satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                        satirlar[9]=bg.myRs.getString("ilan_fiyat");
                        satirlar[9]= satirlar[9]+" TL";
                        satirlar[10]=bg.myRs.getString("sehir");
                        model.addRow(satirlar);
                    }

                    toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");

                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
        }
        
        else if(!"-".equals(kmMin)){
            model.setRowCount(0);
            try {
                bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and ilan_km > "+Integer.parseInt(kmMin)+" order by ilan_km desc");
                
                while(bg.myRs.next()){
                    satirlar[0]=bg.myRs.getString("ilan_id");
                    satirlar[1]=bg.myRs.getString("ilan_adi");
                    satirlar[2]=bg.myRs.getString("araba_marka");
                    satirlar[3]=bg.myRs.getString("araba_model");
                    satirlar[4]=bg.myRs.getString("vites_turu");
                    satirlar[5]=bg.myRs.getString("yakit_turu");
                    satirlar[6]=bg.myRs.getString("renk");
                    satirlar[7]=bg.myRs.getString("ilan_km");
                    satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                    satirlar[9]=bg.myRs.getString("ilan_fiyat");
                    satirlar[9]= satirlar[9]+" TL";
                    satirlar[10]=bg.myRs.getString("sehir");
                    model.addRow(satirlar);
                }
                
                toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");
                
            } catch (SQLException ex) {
                Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        
        else if(!"-".equals(kmMax)){
            model.setRowCount(0);
            try {
                bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and ilan_km<"+kmMax+" order by ilan_km");
                
                while(bg.myRs.next()){
                    satirlar[0]=bg.myRs.getString("ilan_id");
                    satirlar[1]=bg.myRs.getString("ilan_adi");
                    satirlar[2]=bg.myRs.getString("araba_marka");
                    satirlar[3]=bg.myRs.getString("araba_model");
                    satirlar[4]=bg.myRs.getString("vites_turu");
                    satirlar[5]=bg.myRs.getString("yakit_turu");
                    satirlar[6]=bg.myRs.getString("renk");
                    satirlar[7]=bg.myRs.getString("ilan_km");
                    satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                    satirlar[9]=bg.myRs.getString("ilan_fiyat");
                    satirlar[9]= satirlar[9]+" TL";
                    satirlar[10]=bg.myRs.getString("sehir");
                    model.addRow(satirlar);
                }
                
                toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");
                
            } catch (SQLException ex) {
                Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        
        else if(!"-".equals(f_min) && !"-".equals(f_max)){
            model.setRowCount(0);
            try {
                bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and ilan_fiyat between "+Float.parseFloat(f_min)+" and "+Float.parseFloat(f_max));
                
                while(bg.myRs.next()){
                    satirlar[0]=bg.myRs.getString("ilan_id");
                    satirlar[1]=bg.myRs.getString("ilan_adi");
                    satirlar[2]=bg.myRs.getString("araba_marka");
                    satirlar[3]=bg.myRs.getString("araba_model");
                    satirlar[4]=bg.myRs.getString("vites_turu");
                    satirlar[5]=bg.myRs.getString("yakit_turu");
                    satirlar[6]=bg.myRs.getString("renk");
                    satirlar[7]=bg.myRs.getString("ilan_km");
                    satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                    satirlar[9]=bg.myRs.getString("ilan_fiyat");
                    satirlar[9]= satirlar[9]+" TL";
                    satirlar[10]=bg.myRs.getString("sehir");
                    model.addRow(satirlar);
                }
                
                toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");
                
            } catch (SQLException ex) {
                Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        
        else if(!"-".equals(f_min)){
            model.setRowCount(0);
            try {
                bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and ilan_fiyat > "+Float.parseFloat(f_min));
                
                while(bg.myRs.next()){
                    satirlar[0]=bg.myRs.getString("ilan_id");
                    satirlar[1]=bg.myRs.getString("ilan_adi");
                    satirlar[2]=bg.myRs.getString("araba_marka");
                    satirlar[3]=bg.myRs.getString("araba_model");
                    satirlar[4]=bg.myRs.getString("vites_turu");
                    satirlar[5]=bg.myRs.getString("yakit_turu");
                    satirlar[6]=bg.myRs.getString("renk");
                    satirlar[7]=bg.myRs.getString("ilan_km");
                    satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                    satirlar[9]=bg.myRs.getString("ilan_fiyat");
                    satirlar[9]= satirlar[9]+" TL";
                    satirlar[10]=bg.myRs.getString("sehir");
                    model.addRow(satirlar);
                }
                
                toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");
                
            } catch (SQLException ex) {
                Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        
        else if(!"-".equals(f_max)){
            model.setRowCount(0);
            try {
                bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and ilan_fiyat < "+Float.parseFloat(f_max));
                
                while(bg.myRs.next()){
                    satirlar[0]=bg.myRs.getString("ilan_id");
                    satirlar[1]=bg.myRs.getString("ilan_adi");
                    satirlar[2]=bg.myRs.getString("araba_marka");
                    satirlar[3]=bg.myRs.getString("araba_model");
                    satirlar[4]=bg.myRs.getString("vites_turu");
                    satirlar[5]=bg.myRs.getString("yakit_turu");
                    satirlar[6]=bg.myRs.getString("renk");
                    satirlar[7]=bg.myRs.getString("ilan_km");
                    satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                    satirlar[9]=bg.myRs.getString("ilan_fiyat");
                    satirlar[9]= satirlar[9]+" TL";
                    satirlar[10]=bg.myRs.getString("sehir");
                    model.addRow(satirlar);
                }
                
                toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");
                
            } catch (SQLException ex) {
                Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        
        else if(!"-".equals(arama)){
            model.setRowCount(0);
            try {
                bg.myRs = bg.myStat.executeQuery("select ilan_id,ilan_adi,araba_marka,araba_model,vites_turu,yakit_turu,renk,ilan_fiyat,ilan_km,ilan_tarih,sehir from araba,ilan,renkler,sehirler,vites,yakit where ilan_arabaid=araba_id and ilan_sehirid=sehir_id and araba_vitesturuid=vitesturu_id and araba_yakitturuid=yakitturu_id and araba_renkid=renk_id and ilan_adi like '%"+arama+"%'");
                
                while(bg.myRs.next()){
                    satirlar[0]=bg.myRs.getString("ilan_id");
                    satirlar[1]=bg.myRs.getString("ilan_adi");
                    satirlar[2]=bg.myRs.getString("araba_marka");
                    satirlar[3]=bg.myRs.getString("araba_model");
                    satirlar[4]=bg.myRs.getString("vites_turu");
                    satirlar[5]=bg.myRs.getString("yakit_turu");
                    satirlar[6]=bg.myRs.getString("renk");
                    satirlar[7]=bg.myRs.getString("ilan_km");
                    satirlar[8]=bg.myRs.getTimestamp("ilan_tarih");
                    satirlar[9]=bg.myRs.getString("ilan_fiyat");
                    satirlar[9]= satirlar[9]+" TL";
                    satirlar[10]=bg.myRs.getString("sehir");
                    model.addRow(satirlar);
                }
                
                toplam.setText(model.getRowCount()+" adet ilan bulunmaktadır");
                
            } catch (SQLException ex) {
                Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        
        
        
    }//GEN-LAST:event_filtreleActionPerformed

    private void markaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_markaActionPerformed
        baglanti bg = new baglanti();
        
        modelim.removeAllItems();
        modelim.addItem("Hepsi");
        try {
            if(marka.getSelectedIndex()!=marka.getItemCount()){

                bg.myRs = bg.myStat.executeQuery("select distinct araba_model from araba where araba_marka='"+marka.getItemAt(marka.getSelectedIndex())+"'");

                while(bg.myRs.next()){
                    modelim.addItem(bg.myRs.getString("araba_model"));
                }
               
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
        }
        
       
        
        
    }//GEN-LAST:event_markaActionPerformed

    private void tumunu_listeleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tumunu_listeleActionPerformed
        
        try {
            myInitComponents();
        } catch (SQLException ex) {
            Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tumunu_listeleActionPerformed

    private void tarihActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tarihActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tarihActionPerformed

    private void sehirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sehirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sehirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ilan_listeleme.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ilan_listeleme.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ilan_listeleme.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ilan_listeleme.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new ilan_listeleme().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(ilan_listeleme.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ara;
    private javax.swing.JButton bir_onceki;
    private javax.swing.JButton cikis;
    private javax.swing.JButton filtrele;
    private javax.swing.JTextField fiyat_max;
    private javax.swing.JTextField fiyat_min;
    private javax.swing.JTextField ilanlar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField km_max;
    private javax.swing.JTextField km_min;
    private javax.swing.JComboBox<String> marka;
    private javax.swing.JComboBox<String> modelim;
    private javax.swing.JComboBox<String> renk;
    private javax.swing.JComboBox<String> sehir;
    private javax.swing.JTable table;
    private javax.swing.JComboBox<String> tarih;
    private javax.swing.JTextField toplam;
    private javax.swing.JButton tumunu_listele;
    private javax.swing.JComboBox<String> vites_turu;
    private javax.swing.JComboBox<String> yakit_turu;
    // End of variables declaration//GEN-END:variables
}
